alias.l=log --pretty=oneline -n 20 --graph --abbrev-commit
alias.s=status -s
alias.d=!git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat
alias.di=!d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d
alias.p=!git pull; git submodule foreach git pull origin master
alias.c=clone --recursive
alias.ca=!git add -A && git commit -av
alias.go=!f() { git checkout -b "$1" 2> /dev/null || git checkout "$1"; }; f
alias.tags=tag -l
alias.branches=branch -a
alias.remotes=remote -v
alias.amend=commit --amend --reuse-message=HEAD
alias.credit=!f() { git commit --amend --author "$1 <$2>" -C HEAD; }; f
alias.reb=!r() { git rebase -i HEAD~$1; }; r
alias.retag=!r() { git tag -d $1 && git push origin :refs/tags/$1 && git tag $1; }; r
alias.fb=!f() { git branch -a --contains $1; }; f
alias.ft=!f() { git describe --always --contains $1; }; f
alias.fc=!f() { git log --pretty=format:'%C(yellow)%h  %Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short -S$1; }; f
alias.fm=!f() { git log --pretty=format:'%C(yellow)%h  %Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short --grep=$1; }; f
alias.dm=!git branch --merged | grep -v '\*' | xargs -n 1 git branch -d
alias.contributors=shortlog --summary --numbered
alias.mpr=!f() { 		if [ $(printf "%s" "$1" | grep '^[0-9]\+$' > /dev/null; printf $?) -eq 0 ]; then 			git fetch origin refs/pull/$1/head:pr/$1 && 			git rebase master pr/$1 && 			git checkout master && 			git merge pr/$1 && 			git branch -D pr/$1 && 			git commit --amend -m "$(git log -1 --pretty=%B)

Closes #$1."; 		fi 	}; f
alias.precomposeunicode=false
apply.whitespace=fix
core.excludesfile=~/.gitignore_global
core.attributesfile=~/.gitattributes
core.whitespace=space-before-tab,-indent-with-non-tab,trailing-space
core.trustctime=false
core.precomposeunicode=false
core.editor=subl --wait
color.ui=auto
color.branch.current=yellow reverse
color.branch.local=yellow
color.branch.remote=magenta
color.diff.meta=yellow bold
color.diff.frag=magenta bold
color.diff.old=red
color.diff.new=green
color.status.added=yellow
color.status.changed=magenta
color.status.untracked=cyan
diff.renames=copies
diff.tool=Kaleidoscope
help.autocorrect=1
merge.log=true
merge.tool=Kaleidoscope
push.default=matching
push.followtags=true
url.git@github.com:.insteadof=gh:
url.git@github.com:.pushinsteadof=github:
url.git@github.com:.pushinsteadof=git://github.com/
url.git://github.com/.insteadof=github:
url.git@gist.github.com:.insteadof=gst:
url.git@gist.github.com:.pushinsteadof=gist:
url.git@gist.github.com:.pushinsteadof=git://gist.github.com/
url.git://gist.github.com/.insteadof=gist:
user.name=Ahmad Assaf
user.email=ahmad.a.assaf@gmail.com
difftool.Kaleidoscope.cmd=ksdiff --partial-changeset --relative-path "$MERGED" -- "$LOCAL" "$REMOTE"
difftool.Kaleidoscope.prompt=false
mergetool.Kaleidoscope.cmd=/usr/local/bin/ksdiff --merge --output "$MERGED" --base "$BASE" -- "$LOCAL" --snapshot "$REMOTE" --snapshot
mergetool.Kaleidoscope.trustexitcode=true
mergetool.keeptemporaries=false
mergetool.prompt=false
filter.media.required=true
filter.media.clean=git media clean %f
filter.media.smudge=git media smudge %f
difftool.sourcetree.cmd=/usr/local/bin/ksdiff -w "$LOCAL" "$REMOTE"
difftool.sourcetree.path=
mergetool.sourcetree.cmd=/usr/local/bin/ksdiff --merge --output "$MERGED" --base "$BASE" -- "$LOCAL" --snapshot "$REMOTE" --snapshot
mergetool.sourcetree.trustexitcode=true
filter.hawser.clean=git hawser clean %f
filter.hawser.smudge=git hawser smudge %f
filter.hawser.required=true
filter.lfs.clean=git lfs clean %f
filter.lfs.smudge=git lfs smudge %f
filter.lfs.required=true
core.repositoryformatversion=0
core.filemode=true
core.bare=false
core.logallrefupdates=true
core.ignorecase=true
core.precomposeunicode=true
branch.master.remote=origin
branch.master.merge=refs/heads/master
remote.origin.url=git@github.com:ahmadassaf/bash-it
remote.origin.fetch=+refs/heads/*:refs/remotes/origin/*
remote.upstream.url=git@github.com:revans/bash-it.git
remote.upstream.fetch=+refs/heads/*:refs/remotes/upstream/*
remote.github.url=git@github.com:Bash-it/bash-it
remote.github.fetch=+refs/heads/*:refs/remotes/github/*
